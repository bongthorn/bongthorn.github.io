(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{211:function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(0),o=n.n(r);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var u=o.a.createContext({}),p=function(e){var t=o.a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},l={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},m=o.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),m=p(n),d=r,h=m["".concat(s,".").concat(d)]||m[d]||l[d]||a;return n?o.a.createElement(h,i(i({ref:t},u),{},{components:n})):o.a.createElement(h,i({ref:t},u))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,s=new Array(a);s[0]=m;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:r,s[1]=i;for(var u=2;u<a;u++)s[u]=n[u];return o.a.createElement.apply(null,s)}return o.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},99:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return s})),n.d(t,"metadata",(function(){return i})),n.d(t,"rightToc",(function(){return c})),n.d(t,"default",(function(){return p}));var r=n(2),o=n(6),a=(n(0),n(211)),s={title:"Step12 Client Side Authorization"},i={unversionedId:"crud2a-react-react-router/12-client-size-authorization",id:"crud2a-react-react-router/12-client-size-authorization",isDocsHomePage:!1,title:"Step12 Client Side Authorization",description:"1. If current_user visit other user's PostsEditPage",source:"@site/docs/crud2a-react-react-router/12-client-size-authorization.md",permalink:"/docs/crud2a-react-react-router/12-client-size-authorization",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/crud2a-react-react-router/12-client-size-authorization.md",sidebar:"crud2aReactReactRouter",previous:{title:"Step11 PostsEdit",permalink:"/docs/crud2a-react-react-router/11-posts-edit"}},c=[{value:"Step12-1 Make User context",id:"step12-1-make-user-context",children:[]},{value:"Step12-2 Fetch current_user and Provide it",id:"step12-2-fetch-current_user-and-provide-it",children:[]},{value:"Step12-3 Consume(use) currentUser in PostsEditPage",id:"step12-3-consumeuse-currentuser-in-postseditpage",children:[]}],u={rightToc:c};function p(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(a.a)("wrapper",Object(r.a)({},u,n,{components:t,mdxType:"MDXLayout"}),Object(a.a)("ol",null,Object(a.a)("li",{parentName:"ol"},"If ",Object(a.a)("strong",{parentName:"li"},"current_user")," visit other user's ",Object(a.a)("strong",{parentName:"li"},"PostsEditPage")),Object(a.a)("li",{parentName:"ol"},"Redirect to ",Object(a.a)("strong",{parentName:"li"},"HomePage")),Object(a.a)("li",{parentName:"ol"},"Use Context of react")),Object(a.a)("ul",null,Object(a.a)("li",{parentName:"ul"},Object(a.a)("a",Object(r.a)({parentName:"li"},{href:"https://reactjs.org/docs/context.html"}),"https://reactjs.org/docs/context.html")),Object(a.a)("li",{parentName:"ul"},Object(a.a)("a",Object(r.a)({parentName:"li"},{href:"https://alligator.io/react/manage-user-login-react-context/"}),"https://alligator.io/react/manage-user-login-react-context/"))),Object(a.a)("h3",{id:"step12-1-make-user-context"},"Step12-1 Make User context"),Object(a.a)("p",null,"Make ",Object(a.a)("inlineCode",{parentName:"p"},"src/utils/userContext.js"),":"),Object(a.a)("pre",null,Object(a.a)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),'import React from "react";\n\nconst userContext = React.createContext({\n  currentUser: {}\n}); // Create a context object\n\nexport {\n  userContext // Export it so it can be used by other Components\n};\n')),Object(a.a)("h3",{id:"step12-2-fetch-current_user-and-provide-it"},"Step12-2 Fetch current_user and Provide it"),Object(a.a)("p",null,Object(a.a)("inlineCode",{parentName:"p"},"src/App.js")),Object(a.a)("pre",null,Object(a.a)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport axios from 'axios';\n\nimport { getAccessToken, isAuthenticated } from \"./utils/auth\";\nimport { userContext } from './utils/userContext';\nimport PrivateRoute from './utils/PrivateRoute';\n\nimport Navbar from \"./components/Navbar\";\n\nimport HomePage from './pages/HomePage';\nimport LoginPage from './pages/LoginPage';\nimport SignUpPage from './pages/SignUpPage';\nimport PostsNewPage from './pages/PostsNewPage';\nimport PostsEditPage from './pages/PostsEditPage';\nimport PostsShowPage from './pages/PostsShowPage';\nimport MyPostsPage from './pages/MyPostsPage';\n\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        currentUser: {}\n    };\n  }\n\n  componentDidMount() {\n    // Fetch current_user if user logged in.\n    if (isAuthenticated) {\n      // https://stackoverflow.com/questions/44245588/how-to-send-authorization-header-with-axios\n      axios.get(`http://localhost:3000/me`, { \n        headers: {\n          'Authorization': `Bearer ${getAccessToken()}`\n        },\n      })\n        .then((res) => {\n          const currentUser = res.data;\n          this.setState({\n            currentUser\n          });\n        })\n    }\n  }\n\n  render() {\n    const { currentUser } = this.state;\n\n    return (\n      /* Wrap Router by Context Provider */\n      /* By doing this, you can access currentUser by using Consumer */\n      <userContext.Provider value={currentUser}>\n        <Router>\n          <div>\n            <Navbar />\n\n            <Switch>\n              <Route exact path=\"/\">\n                <HomePage />\n              </Route>\n\n              <Route path=\"/sign_up\">\n                <SignUpPage />\n              </Route>\n\n              <Route path=\"/login\">\n                <LoginPage />\n              </Route>\n\n              {/* https://stackoverflow.com/questions/46621334/react-react-router-dom-two-route-conflict */}\n              {/* Order is important */}\n              <PrivateRoute path=\"/posts/new\">\n                <PostsNewPage />\n              </PrivateRoute>\n\n              <Route exact path=\"/posts/:id\">\n                <PostsShowPage />\n              </Route>\n\n              <PrivateRoute path=\"/my-posts\">\n                <MyPostsPage />\n              </PrivateRoute>\n\n              <PrivateRoute path=\"/posts/:id/edit\">\n                <PostsEditPage />\n              </PrivateRoute>\n            </Switch>\n          </div>\n        </Router>\n      </userContext.Provider>\n    );\n  }\n}\n")),Object(a.a)("h3",{id:"step12-3-consumeuse-currentuser-in-postseditpage"},"Step12-3 Consume(use) currentUser in PostsEditPage"),Object(a.a)("pre",null,Object(a.a)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),'<userContext.Consumer>\n  {(currentUser) => {\n    if (currentUser.id !== post.user_id) {\n      return (\n        <Redirect\n          to={{\n            pathname: "/"\n          }}\n        />\n      )\n    }\n    return(\n      <>\n        <h1>Posts#Edit</h1>\n        <div>{error && error.message}</div>\n        <form onSubmit={this.handleSubmit}>\n        <label>\n          Title:\n          <input name="title" type="text" value={title} onChange={this.handleInputChange} />\n        </label>\n        <br/>\n        <label>\n          Content:\n          <input name="content" type="text" value={content} onChange={this.handleInputChange} />\n        </label>\n        <br/>\n        <input type="submit" value="Submit" disabled={isSubmitting} />\n      </form>\n      </>\n    )\n  }}\n</userContext.Consumer>\n')),Object(a.a)("p",null,Object(a.a)("inlineCode",{parentName:"p"},"src/pages/PostsEditPage.js"),":"),Object(a.a)("pre",null,Object(a.a)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),'import React from "react";\nimport axios from \'axios\';\nimport { Redirect } from "react-router-dom";\n\nimport { userContext } from \'../utils/userContext\';\nimport { getAccessToken } from "../utils/auth";\n\nclass PostsEditPage extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      post: null,\n      title: "",\n      content: "",\n      isSubmitting: false,\n      isLoaded: false\n    };\n  }\n\n  componentDidMount() {\n    // https://reacttraining.com/react-router/web/api/Route/component\n    const { id } = this.props.match.params\n\n    axios.get(`http://localhost:3000/posts/${id}`)\n      .then((res) => {\n        const post = res.data;\n        const { title, content } = post;\n        this.setState({\n          isLoaded: true,\n          post,\n          title,\n          content\n        });\n      })\n      .catch((error) => {\n        this.setState({\n          isLoaded: true,\n          error\n        });\n      })\n  }\n\n  handleInputChange = (event) => {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    this.setState({\n      isSubmitting: true\n    })\n\n    const { id } = this.props.match.params\n    const { title, content } = this.state;\n\n\n    axios.put(`http://localhost:3000/posts/${id}/`, {\n      title,\n      content\n    }, {\n      headers: {\n        \'Authorization\': `Bearer ${getAccessToken()}`\n      },\n    })\n      .then((res) => {\n        const post = res.data;\n        // https://stackoverflow.com/questions/42701129/how-to-push-to-history-in-react-router-v4\n        this.props.history.push(`/posts/${post.id}`);\n      })\n      .catch((error) => {\n        this.setState({\n          isSubmitting: false,\n          error\n        });\n      })\n  }\n\n  render(){\n    const { post, title, content, error, isSubmitting, isLoaded } = this.state;\n\n    if (!isLoaded) {\n      return <div>Loading...</div>\n    } else {\n      return (\n        <userContext.Consumer>\n          {(currentUser) => {\n            if (currentUser.id !== post.user_id) {\n              return (\n                <Redirect\n                  to={{\n                    pathname: "/"\n                  }}\n                />\n              )\n            }\n            return(\n              <>\n                <h1>Posts#Edit</h1>\n                <div>{error && error.message}</div>\n                <form onSubmit={this.handleSubmit}>\n                <label>\n                  Title:\n                  <input name="title" type="text" value={title} onChange={this.handleInputChange} />\n                </label>\n                <br/>\n                <label>\n                  Content:\n                  <input name="content" type="text" value={content} onChange={this.handleInputChange} />\n                </label>\n                <br/>\n                <input type="submit" value="Submit" disabled={isSubmitting} />\n              </form>\n              </>\n            )\n          }}\n        </userContext.Consumer>\n      )\n    }    \n  }\n}\n\nexport default PostsEditPage;\n')))}p.isMDXComponent=!0}}]);