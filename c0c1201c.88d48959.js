(window.webpackJsonp=window.webpackJsonp||[]).push([[111],{165:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return r})),n.d(t,"metadata",(function(){return s})),n.d(t,"rightToc",(function(){return i})),n.d(t,"default",(function(){return l}));var o=n(2),a=(n(0),n(211));const r={title:"Step18 List Posts"},s={unversionedId:"flutter-crud2a/list-posts",id:"flutter-crud2a/list-posts",isDocsHomePage:!1,title:"Step18 List Posts",description:"Goal of this step",source:"@site/docs/flutter-crud2a/list-posts.md",permalink:"/docs/flutter-crud2a/list-posts",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/flutter-crud2a/list-posts.md",sidebar:"flutterCrud2a",previous:{title:"Step17 Create Post",permalink:"/docs/flutter-crud2a/create-post"},next:{title:"Step19 Show Post Page",permalink:"/docs/flutter-crud2a/show-post-page"}},i=[{value:"Goal of this step",id:"goal-of-this-step",children:[]},{value:"Show list of posts in HomePage",id:"show-list-of-posts-in-homepage",children:[{value:"Add post again to check how <strong><code>StreamBuilder</code></strong> works",id:"add-post-again-to-check-how-streambuilder-works",children:[]},{value:"OrderBy <code>createdAt</code>",id:"orderby-createdat",children:[]},{value:"Error memo",id:"error-memo",children:[]}]},{value:"Refactor code to use Post Model",id:"refactor-code-to-use-post-model",children:[{value:"Why ?",id:"why-",children:[]},{value:"Create Post model",id:"create-post-model",children:[]},{value:"Refactor StreamBuilder",id:"refactor-streambuilder",children:[]}]},{value:"Navigate to <strong>PostsShowPage</strong>",id:"navigate-to-postsshowpage",children:[]}],c={rightToc:i};function l({components:e,...t}){return Object(a.a)("wrapper",Object(o.a)({},c,t,{components:e,mdxType:"MDXLayout"}),Object(a.a)("h2",{id:"goal-of-this-step"},"Goal of this step"),Object(a.a)("ul",null,Object(a.a)("li",{parentName:"ul"},"Show list of posts in ",Object(a.a)("inlineCode",{parentName:"li"},"HomePage"))),Object(a.a)("h2",{id:"show-list-of-posts-in-homepage"},"Show list of posts in HomePage"),Object(a.a)("p",null,"This is almost same code with official example.\n",Object(a.a)("a",Object(o.a)({parentName:"p"},{href:"https://pub.dev/packages/cloud_firestore#usage"}),"https://pub.dev/packages/cloud_firestore#usage")),Object(a.a)("p",null,'But "posts" collection is subcollection of "users" top level collection.'),Object(a.a)("p",null,"So, we need to use ",Object(a.a)("inlineCode",{parentName:"p"},"collectionGroup"),"."),Object(a.a)("p",null,"Ref: ",Object(a.a)("a",Object(o.a)({parentName:"p"},{href:"https://stackoverflow.com/questions/46573014/firestore-query-subcollections"}),"https://stackoverflow.com/questions/46573014/firestore-query-subcollections")),Object(a.a)("pre",null,Object(a.a)("code",Object(o.a)({parentName:"pre"},{className:"language-dart",metastring:'{2} title="lib/pages/home_page.dart"',"{2}":!0,title:'"lib/pages/home_page.dart"'}),"body: StreamBuilder<QuerySnapshot>(\n    stream: Firestore.instance.collectionGroup('posts').snapshots(),\n    builder: (BuildContext context, AsyncSnapshot<QuerySnapshot> snapshot) {\n        if (snapshot.hasError) return Text('Error: ${snapshot.error}');\n        switch (snapshot.connectionState) {\n            case ConnectionState.waiting:\n                return Text('Loading...');\n            default:\n                return ListView(\n                    children: snapshot.data.documents.map((DocumentSnapshot document) {\n                        return ListTile(\n                            title: Text(\n                                document['title'],\n                                style: TextStyle(fontWeight: FontWeight.bold),\n                            ),\n                            subtitle: Text(document['content']),\n                        );\n                    }).toList(),\n                );\n        }\n    },\n),\n")),Object(a.a)("h3",{id:"add-post-again-to-check-how-streambuilder-works"},"Add post again to check how ",Object(a.a)("strong",{parentName:"h3"},Object(a.a)("inlineCode",{parentName:"strong"},"StreamBuilder"))," works"),Object(a.a)("p",null,"By using ",Object(a.a)("strong",{parentName:"p"},Object(a.a)("inlineCode",{parentName:"strong"},"StreamBuilder")),", new post automatically added to HomePage."),Object(a.a)("h3",{id:"orderby-createdat"},"OrderBy ",Object(a.a)("inlineCode",{parentName:"h3"},"createdAt")),Object(a.a)("pre",null,Object(a.a)("code",Object(o.a)({parentName:"pre"},{className:"language-dart"}),"Firestore.instance.collectionGroup('posts').orderBy('createdAt', descending: true).snapshots(),\n")),Object(a.a)("p",null,Object(a.a)("a",Object(o.a)({parentName:"p"},{href:"https://pub.dev/documentation/cloud_firestore/latest/cloud_firestore/Query/orderBy.html"}),"https://pub.dev/documentation/cloud_firestore/latest/cloud_firestore/Query/orderBy.html")),Object(a.a)("h3",{id:"error-memo"},"Error memo"),Object(a.a)("p",null,"If you see error message like below, ",Object(a.a)("strong",{parentName:"p"},'"please click link" and "Add index".')),Object(a.a)("pre",null,Object(a.a)("code",Object(o.a)({parentName:"pre"},{className:"language-bash",metastring:'title="terminal"',title:'"terminal"'}),"I/System.out(11646): com.google.firebase.firestore.FirebaseFirestoreException: FAILED_PRECONDITION: The query requires a COLLECTION_GROUP_DESC index for collection posts and field createdAt. You can create it here: https://console.firebase.google.com/v1/r/project/flutter-test-app-bd9a5/firestore/indexes?create_exemption=Cltwcm9qZWN0cy9mbHV0dGVyLXRlc3QtYXBwLWJkOWE1L2RhdGFiYXNlcy8oZGVmYXVsdCkvY29sbGVjdGlvbkdyb3Vwcy9wb3N0cy9maWVsZHMvY3JlYXRlZEF0EAIaDQoJY3JlYXRlZEF0EAI\n")),Object(a.a)("h2",{id:"refactor-code-to-use-post-model"},"Refactor code to use Post Model"),Object(a.a)("h3",{id:"why-"},"Why ?"),Object(a.a)("p",null,"Data which is returned by Firestore is ",Object(a.a)("inlineCode",{parentName:"p"},"DocumentSnapshot")," type data."),Object(a.a)("p",null,"But it is good practice to define ",Object(a.a)("inlineCode",{parentName:"p"},"Post")," model and what type of fields ",Object(a.a)("inlineCode",{parentName:"p"},"Post")," model should have in our application side."),Object(a.a)("blockquote",null,Object(a.a)("p",{parentName:"blockquote"},"With this approach, the calling code can have type safety, autocompletion for the name and email fields, and compile-time exceptions. If you make typos or treat the fields as ints instead of Strings, the app won\u2019t compile, instead of crashing at runtime.")),Object(a.a)("p",null,Object(a.a)("a",Object(o.a)({parentName:"p"},{href:"https://flutter.dev/docs/development/data-and-backend/json#serializing-json-inside-model-classes"}),"https://flutter.dev/docs/development/data-and-backend/json#serializing-json-inside-model-classes")),Object(a.a)("h3",{id:"create-post-model"},"Create Post model"),Object(a.a)("pre",null,Object(a.a)("code",Object(o.a)({parentName:"pre"},{className:"language-dart",metastring:'title="lib/models/post.dart"',title:'"lib/models/post.dart"'}),"import 'package:cloud_firestore/cloud_firestore.dart';\n\nclass Post {\n  final String id;\n  final String title;\n  final String content;\n  final Timestamp createdAt;\n\n  // https://dart.dev/guides/language/language-tour#constructors\n  Post(this.id, this.title, this.content, this.createdAt);\n\n  // https://codelabs.developers.google.com/codelabs/flutter-firebase/index.html#4\n  // 1. Using \"Named constructors\"\n  // 2. Using \"Initializer list\"\n  Post.fromFirestore(DocumentSnapshot document)\n    : id = document.documentID,\n      title = document['title'],\n      content = document['content'],\n      createdAt = document['createdAt'];\n}\n")),Object(a.a)("h3",{id:"refactor-streambuilder"},"Refactor StreamBuilder"),Object(a.a)("pre",null,Object(a.a)("code",Object(o.a)({parentName:"pre"},{className:"language-dart",metastring:'{12,16,19} title="lib/pages/home_page.dart"',"{12,16,19}":!0,title:'"lib/pages/home_page.dart"'}),"body: StreamBuilder<QuerySnapshot>(\n    stream: Firestore.instance.collectionGroup('posts').snapshots(),\n    builder: (BuildContext context, AsyncSnapshot<QuerySnapshot> snapshot) {\n        if (snapshot.hasError)\n            return Text('Error: ${snapshot.error}');\n        switch (snapshot.connectionState) {\n            case ConnectionState.waiting: return Text('Loading...');\n            default:\n                return ListView(\n                    children: snapshot.data.documents.map((DocumentSnapshot document) {\n                        \n                        final post = Post.fromFirestore(document);\n                        \n                        return ListTile(\n                            title: Text(\n                                post.title,\n                                style: TextStyle(fontWeight: FontWeight.bold),\n                            ),\n                            subtitle: Text(post.content),\n                        );\n                    }).toList(),\n                );\n        }\n    },\n),\n")),Object(a.a)("h2",{id:"navigate-to-postsshowpage"},"Navigate to ",Object(a.a)("strong",{parentName:"h2"},"PostsShowPage")),Object(a.a)("p",null,"When user tap each post, we want to navigate user to ",Object(a.a)("strong",{parentName:"p"},"PostsShowPage"),"."),Object(a.a)("pre",null,Object(a.a)("code",Object(o.a)({parentName:"pre"},{className:"language-dart",metastring:'{19-27} title="lib/pages/home_page.dart"',"{19-27}":!0,title:'"lib/pages/home_page.dart"'}),"body: StreamBuilder<QuerySnapshot>(\n    stream: Firestore.instance.collectionGroup('posts').snapshots(),\n    builder: (BuildContext context, AsyncSnapshot<QuerySnapshot> snapshot) {\n        if (snapshot.hasError)\n            return Text('Error: ${snapshot.error}');\n        switch (snapshot.connectionState) {\n            case ConnectionState.waiting: return Text('Loading...');\n            default:\n                return ListView(\n                    children: snapshot.data.documents.map((DocumentSnapshot document) {\n                        final post = Post.fromFirestore(document);\n\n                        return ListTile(\n                            title: Text(\n                                post.title,\n                                style: TextStyle(fontWeight: FontWeight.bold),\n                            ),\n                            subtitle: Text(post.content),\n                            onTap: () {\n                                // https://flutter.dev/docs/cookbook/navigation/passing-data#4-navigate-and-pass-data-to-the-detail-screen\n                                Navigator.push(\n                                    context,\n                                    MaterialPageRoute(\n                                        builder: (context) => PostsShowPage(post: post),\n                                    ),\n                                );\n                            },\n                        );\n                    }).toList(),\n                );\n        }\n    },\n),\n")),Object(a.a)("h4",{id:"just-a-memo"},"*Just a memo"),Object(a.a)("pre",null,Object(a.a)("code",Object(o.a)({parentName:"pre"},{className:"language-dart"}),"print('document: ${document[\"title\"]}');\n")),Object(a.a)("p",null,"This is DocumentSnapshot class operator\n",Object(a.a)("a",Object(o.a)({parentName:"p"},{href:"https://pub.dev/documentation/cloud_firestore/latest/cloud_firestore/DocumentSnapshot-class.html#operators"}),"https://pub.dev/documentation/cloud_firestore/latest/cloud_firestore/DocumentSnapshot-class.html#operators")))}l.isMDXComponent=!0},211:function(e,t,n){"use strict";n.d(t,"a",(function(){return m}));var o=n(0),a=n.n(o);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=a.a.createContext({}),d=function(e){var t=a.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},u=a.a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,s=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),u=d(n),m=o,h=u["".concat(s,".").concat(m)]||u[m]||p[m]||r;return n?a.a.createElement(h,i(i({ref:t},l),{},{components:n})):a.a.createElement(h,i({ref:t},l))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,s=new Array(r);s[0]=u;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:o,s[1]=i;for(var l=2;l<r;l++)s[l]=n[l];return a.a.createElement.apply(null,s)}return a.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"}}]);